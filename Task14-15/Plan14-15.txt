14.1 Завести новое животное
	Создать внутренний ArrayList<Animal> для хранения животных
		Хранить данные во внутренней памяти, без использования внешних файлов, для упрощения кода.
	Реализовать код добавления животных
	Реализовать код отображения списка животных для проверки работоспособности кода добавления и хранения
		При создании типа Animal создать функцию "getFullInfo" для отображения всей хранимой информации о животном.
14.2 определять животное в правильный класс
	Создать отдельный класс для каждого вида животных, привязать их через соответствующий подтип к родительскому типу.
	В процессе добавления животного в массив запрашивать тип животного, добавлять животное через создание нового элемента соответствующего класса
14.3 увидеть список команд, которое выполняет животное
	При создании типа Animal определить функцию CommandsList, которая выведет список всех команд.
		Список команд реализовать через Array.
14.4 обучить животное новым командам
	При создании типа Animal определить фунцию addComand для добавления новой команды в список.
14.5 Реализовать навигацию по меню
	При запуске программы начинать с меню.
	Реализовать меню простым методом через while(work) и жестко предзаписанные варианты меню.
		Навигацию в меню реализовать через switch(choice), где choice - int'овое значение, получаемое от пользователя через консоль.
		Добавить в меню следующие пункты:
			> Добавить животное
				Запрос от пользователя:
					Вид животного (по номеру из списка)
					Кличка животного
				В случае некорректного ввода любого из значений - сообщение об ошибке и выход в меню.
				Добавление животного в список Array[Animal] нового элемента, с классом, соответствующим виду животного.
			> Показать список всех животных
				Дополнительное меню не требуемое по заданию, но упрощающее процесс проверки работоспособности
				Выдает результат запроса getFullInfo у всех элементов ArrayList
			> Обучить животное новой команде.
				Запрос клички животного от пользователя
				Поиск в общем списке животных по классовому значанию name.
					Игнорировать возможность существования животных с одинаковыми кличками для упрощения кода.
				В случае совпадения запросить добавление одной команды к списку команд.
				В случае отстутсвия совпадений выдать соответствующее сообщение, вернуться в меню.
				
15.Создайте класс Счетчик, у которого есть метод add(), увеличивающий̆ значение внутренней̆int переменной̆на 1 при нажатие “Завести новое животное”
Сделайте так, чтобы с объектом такого типа можно было работать в блоке try-with-resources. Нужно бросить исключение, если работа с объектом типа счетчик была не в ресурсном try и/или ресурс остался открыт.
Значение считать в ресурсе try, если при заведения животного заполнены все поля.
	Добавить класс Counter, имплиментирующий AutoCloseable.
	В классе определить счетчик (int = 0), функцию увеличения счетчика и boolean'овое 